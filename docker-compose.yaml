version: '3.9'

services:
  # Message Broker
  zookeeper:
    # container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    restart: always
    deploy:
        resources:
          limits:
            cpus: '0.1'
            memory: 128M
  kafka:
    # container_name: kafka
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    volumes:
      # - data_kafka:/var/run/docker.sock
      - data_kafka:/kafka
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LOG_DIRS=/logs
    depends_on:
      - zookeeper
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
  kafka-ui:
    image: provectuslabs/kafka-ui
    # container_name: kafka-ui
    ports:  
      - 8081:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - zookeeper
      - kafka
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
    profiles:
      - donotstart

  # Databases
  mongo:
    # container_name: mongo
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - data_mongo:/data/db
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M

  # Services
  svc_post:
    # container_name: svc_post
    build: ./svc_post
    volumes:
      - ./svc_post:/app
    environment:
      - PORT=8080
      - MONGO_URL=mongodb://mongo:27017/svc_post
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - mongo
      - kafka
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M

  svc_comment:
    # container_name: svc_comment
    build: ./svc_comment
    volumes:
      - ./svc_comment:/app
    environment:
      - PORT=8080
      - MONGO_URL=mongodb://mongo:27017/svc_comment
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - mongo
      - kafka
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M

  svc_query:
    # container_name: svc_query
    build: ./svc_query
    volumes:
      - ./svc_query:/app
    environment:
      - PORT=8080
      - MONGO_URL=mongodb://mongo:27017/svc_query
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - mongo
      - kafka
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M


  # API Gateway
  api_gateway:
    # container_name: api_gateway
    build: ./api_gateway
    ports:
      - 5000:8080
    volumes:
      - ./api_gateway:/app
    environment:
      - PORT=8080
      - SERVICE_POST_HOST=http://svc_post:8080
      - SERVICE_COMMENT_HOST=http://svc_comment:8080
      - SERVICE_QUERY_HOST=http://svc_query:8080 
    depends_on:
      - svc_post
      - svc_comment
      - svc_query
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M

volumes:
  data_kafka:
  data_mongo:
